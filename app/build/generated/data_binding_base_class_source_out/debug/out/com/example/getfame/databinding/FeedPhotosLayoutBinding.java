// Generated by view binder compiler. Do not edit!
package com.example.getfame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.getfame.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FeedPhotosLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView feedActualImage;

  @NonNull
  public final TextView feedName;

  @NonNull
  public final ImageView feedProfileImage;

  @NonNull
  public final RelativeLayout relativeOne;

  @NonNull
  public final RelativeLayout relativeThree;

  @NonNull
  public final CardView relativeTwo;

  private FeedPhotosLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView feedActualImage, @NonNull TextView feedName,
      @NonNull ImageView feedProfileImage, @NonNull RelativeLayout relativeOne,
      @NonNull RelativeLayout relativeThree, @NonNull CardView relativeTwo) {
    this.rootView = rootView;
    this.feedActualImage = feedActualImage;
    this.feedName = feedName;
    this.feedProfileImage = feedProfileImage;
    this.relativeOne = relativeOne;
    this.relativeThree = relativeThree;
    this.relativeTwo = relativeTwo;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeedPhotosLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeedPhotosLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.feed_photos_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeedPhotosLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feed_actual_image;
      ImageView feedActualImage = rootView.findViewById(id);
      if (feedActualImage == null) {
        break missingId;
      }

      id = R.id.feed_name;
      TextView feedName = rootView.findViewById(id);
      if (feedName == null) {
        break missingId;
      }

      id = R.id.feed_profile_image;
      ImageView feedProfileImage = rootView.findViewById(id);
      if (feedProfileImage == null) {
        break missingId;
      }

      id = R.id.relative_one;
      RelativeLayout relativeOne = rootView.findViewById(id);
      if (relativeOne == null) {
        break missingId;
      }

      id = R.id.relative_three;
      RelativeLayout relativeThree = rootView.findViewById(id);
      if (relativeThree == null) {
        break missingId;
      }

      id = R.id.relative_two;
      CardView relativeTwo = rootView.findViewById(id);
      if (relativeTwo == null) {
        break missingId;
      }

      return new FeedPhotosLayoutBinding((RelativeLayout) rootView, feedActualImage, feedName,
          feedProfileImage, relativeOne, relativeThree, relativeTwo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
