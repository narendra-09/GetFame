// Generated by view binder compiler. Do not edit!
package com.example.getfame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.getfame.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAccountBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout layout;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView profile;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView titlePhotos;

  private FragmentAccountBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout layout,
      @NonNull TextView name, @NonNull ImageView profile, @NonNull RecyclerView recyclerView,
      @NonNull TextView titlePhotos) {
    this.rootView = rootView;
    this.layout = layout;
    this.name = name;
    this.profile = profile;
    this.recyclerView = recyclerView;
    this.titlePhotos = titlePhotos;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout;
      RelativeLayout layout = rootView.findViewById(id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.profile;
      ImageView profile = rootView.findViewById(id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.title_photos;
      TextView titlePhotos = rootView.findViewById(id);
      if (titlePhotos == null) {
        break missingId;
      }

      return new FragmentAccountBinding((RelativeLayout) rootView, layout, name, profile,
          recyclerView, titlePhotos);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
