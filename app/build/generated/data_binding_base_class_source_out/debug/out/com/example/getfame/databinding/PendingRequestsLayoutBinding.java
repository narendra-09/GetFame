// Generated by view binder compiler. Do not edit!
package com.example.getfame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.getfame.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PendingRequestsLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button pendingAccept;

  @NonNull
  public final TextView pendingEmail;

  @NonNull
  public final TextView pendingName;

  @NonNull
  public final ImageView pendingProfilePic;

  private PendingRequestsLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull Button pendingAccept, @NonNull TextView pendingEmail, @NonNull TextView pendingName,
      @NonNull ImageView pendingProfilePic) {
    this.rootView = rootView;
    this.pendingAccept = pendingAccept;
    this.pendingEmail = pendingEmail;
    this.pendingName = pendingName;
    this.pendingProfilePic = pendingProfilePic;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PendingRequestsLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PendingRequestsLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pending_requests_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PendingRequestsLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pending_accept;
      Button pendingAccept = rootView.findViewById(id);
      if (pendingAccept == null) {
        break missingId;
      }

      id = R.id.pending_email;
      TextView pendingEmail = rootView.findViewById(id);
      if (pendingEmail == null) {
        break missingId;
      }

      id = R.id.pending_name;
      TextView pendingName = rootView.findViewById(id);
      if (pendingName == null) {
        break missingId;
      }

      id = R.id.pending_profile_pic;
      ImageView pendingProfilePic = rootView.findViewById(id);
      if (pendingProfilePic == null) {
        break missingId;
      }

      return new PendingRequestsLayoutBinding((RelativeLayout) rootView, pendingAccept,
          pendingEmail, pendingName, pendingProfilePic);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
